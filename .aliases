alias reload='source ~/.zshrc'
alias home='cd $HOME'
alias pr='cd ~/projects'
alias h='history'
alias wget="curl -O"
alias emacsclient='/Applications/Emacs.app/Contents/MacOS/bin/emacsclient'
alias ema='open -a /Applications/Emacs.app $1'
alias emacs="/Applications/Emacs.app/Contents/MacOS/Emacs -nw"
alias em="emacsclient -t"
alias cutt="cd ~/projects/cuttingedge"

# ls
alias ls="ls -F -a -1"
alias l="ls -lAh1"
alias ll="ls -l"
alias la='ls -A'

# yarn
alias yi="yarn install"
alias ya="yarn add"
alias yt="yarn test"
alias ys="yarn start"
alias yb="yarn build"
alias yib="yi && yb"
alias yibs="yib && ys"
alias yd="yarn deploy"
alias yp="yarn prepack"
alias yall="yarn prepack && yarn lint && yarn test"
alias yl="yarn lint"
alias yc="yarn clean"

# git
alias gs="git status"
alias git-clean-up-repo=". $HOME/dotfiles/git-clean-up-repo.sh"

# npm
alias npmb="npm run build"

#ruby
alias be="bundle exec"

#postgres
alias pg-start='pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start'
alias pg-stop='pg_ctl -D /usr/local/var/postgres stop -s -m fast'

#kill
kill_vscode='kill -9 $(pgrep Electron)'

function rstvsc()
{
  killall Electron 2> /dev/null
  code .
}

function rstvsc_log()
{
   rm ~/.tslog 2> /dev/null
   TSS_LOG="-level verbose -file /Users/paulcowan/.tslog" rstvsc
}

function extract()      # Handy Extract Program.
{
     if [ -f $1 ] ; then
         case $1 in
             *.tar.bz2)   tar xvjf $1     ;;
             *.tar.gz)    tar xvzf $1     ;;
             *.bz2)       bunzip2 $1      ;;
             *.rar)       unrar x $1      ;;
             *.gz)        gunzip $1       ;;
             *.tar)       tar xvf $1      ;;
             *.tbz2)      tar xvjf $1     ;;
             *.tgz)       tar xvzf $1     ;;
             *.zip)       unzip $1        ;;
             *.Z)         uncompress $1   ;;
             *.7z)        7z x $1         ;;
             *)           echo "'$1' cannot be extracted via >extract<" ;;
         esac
     else
         echo "'$1' is not a valid file"
     fi
}

alias whatsmyip="curl ifconfig.me"

function ff()
{
  findIt f $1
}

function fd()
{
  findIt d $1
}

function findIt ()
{
  find . -type $1 -iname "*$2*" -ls;
}

function kill_process()
{
   kill -9 $(lsof -i:$1 -t) 2> /dev/null
}

function sizes()
{
   du -sh * | sort -n 
}

function docker-nuke()
{
  docker system prune -a --volumes
  docker rm $(docker ps -a -q) -f
  docker rmi $(docker images -q) -f
  docker network rm $(docker network ls -q)
}

function kill_bigtest()
{
  kill_process 24000
  kill_process 24001
  kill_process 24002
  kill_process 36000
  kill_process 36001
  kill_process 36002
}
